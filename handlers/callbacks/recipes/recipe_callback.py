""" """
import datetime
import os

from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup, FSInputFile, LinkPreviewOptions
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

from utils.FSM_states import FsmStates

from data.dbconnect import mongoBase
from markups.markups import keyboard

recipes = Router()


@recipes.callback_query(F.data == "button_recipe_analyse_pressed")
async def recipe_hello_message(call: CallbackQuery, state: FSMContext) -> None:
    """

    :param call:
    :return:
    """

    date = await mongoBase.check_recipe_subscription(tg_id=call.message.chat.id)
    if date == None or date < datetime.datetime.utcnow():
        await call.answer(text='–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏.\n\n–ö—É–ø–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –≤ —Ä–∞–∑–¥–µ–ª–µ "–û–ø–ª–∞—Ç–∞".',
                          show_alert=True)
    else:
        keyboard = ReplyKeyboardMarkup(keyboard=[
            [KeyboardButton(text="–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ üêî")],
            [KeyboardButton(text="–§–∞—Ä—à ü´î")],
            [KeyboardButton(text="–Ø–π—Ü–∞ üç≥")],
            [KeyboardButton(text="–û–≤—Å—è–Ω–∫–∞ ü•£")],
            [KeyboardButton(text="–¢—É–Ω–µ—Ü üê†")],
            # [KeyboardButton(text="–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã üç§")],
            [KeyboardButton(text="–¢–≤–æ—Ä–æ–≥ üçö")],
            # [KeyboardButton(text="–õ–∞–≤–∞—à/—Ç–æ—Ä—Ç–∏–ª—å—è üåÆ")],
            [KeyboardButton(text="–ê–≤–æ–∫–∞–¥–æ ü•ë")],
            [KeyboardButton(text="–°–∞–ª–∞—Ç—ã –∏ –ø–æ–∫–µ ü•ó")],
            # [KeyboardButton(text="–ü–∞—Å—Ç—ã üçù")],
            [KeyboardButton(text="–ü–∞–Ω–∫–µ–π–∫–∏ –∏ –≤–∞—Ñ–ª–∏ ü•û")],
            # [KeyboardButton(text="–°—ã—Ä–Ω–∏–∫–∏ üçÆ")],
            # [KeyboardButton(text="–†–æ–ª–ª—ã üåØ")],
            # [KeyboardButton(text="–í–∞—Ñ–ª–∏ üßá")],
            [KeyboardButton(text="–î–µ—Å–µ—Ä—Ç—ã üç®")],
            [KeyboardButton(text="–ù–∞–∑–∞–¥")]
        ], resize_keyboard=True)

        await call.message.answer(text="–≠—Ç–æ—Ç —Å–±–æ—Ä–Ω–∏–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –ø–∏—Ç–∞–Ω–∏—é –±–µ–∑ —É—â–µ—Ä–±–∞ –¥–ª—è –≤–∫—É—Å–∞. –í –∫–∞–∂–¥–æ–π –ø–æ–¥–±–æ—Ä–∫–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –±–ª—é–¥–∞ —Å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–º –ö–ë–ñ–£, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –ª—é–±–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ–¥–∞ –∏ –ª—é–±–æ–≥–æ –ø–æ–≤–æ–¥–∞ ‚Äî –æ—Ç –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–≤—Ç—Ä–∞–∫–æ–≤ –¥–æ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö —É–∂–∏–Ω–æ–≤.\n\n–ö–∞–∂–¥—ã–π —Ä–µ—Ü–µ–ø—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∫—É—Å–Ω—ã–π, –Ω–æ –∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª–µ–≥–∫–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ä–∞—Ü–∏–æ–Ω –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π, –±—É–¥—å —Ç–æ –ø–æ—Ö—É–¥–µ–Ω–∏–µ, –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –±–æ–ª–µ–µ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏. –ë–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ—Å—Ç—ã–º –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –≥–æ—Ç–æ–≤–∏—Ç—å –±–ª—é–¥–∞ –¥–æ–º–∞, –Ω–∞—Å–ª–∞–∂–¥–∞—è—Å—å –∏—Ö —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º –∏ –∏–∑—ã—Å–∫–∞–Ω–Ω–æ—Å—Ç—å—é.\n\n–ü—É—Å—Ç—å —ç—Ç–æ—Ç —Å–±–æ—Ä–Ω–∏–∫ —Å—Ç–∞–Ω–µ—Ç –≤–∞—à–∏–º –Ω–∞–¥–µ–∂–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –∫—É—Ö–Ω–µ, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—è –Ω–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–∑–Ω—ã—Ö –∏ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –±–ª—é–¥ –¥–ª—è —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö!",
                                  reply_markup=keyboard)

        await state.set_state(FsmStates.choose_category)


@recipes.message(F.text == "–î–µ—Å–µ—Ä—Ç—ã üç®", StateFilter(FsmStates.choose_category))
async def send_desserts(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_desert1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='desert2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='desert3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                         text="<b>–ó–∞–ø–µ—á–µ–Ω–Ω—ã–µ –≥—Ä—É—à–∏ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏ —Ä–∏–∫–æ—Ç—Ç–æ–π (–ö–ë–ñ–£: 383/24/12/28)</b>",
                         parse_mode='html',
                         link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/YD18NMtn_v8?si=GuPBb-zWIUwMpHP7',
                                                                   prefer_large_media=True),
                         reply_markup=keyboard
                         )

    await state.clear()


@recipes.message(F.text == "–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ üêî", StateFilter(FsmStates.choose_category))
async def send_desserts(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_chicken1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='chicken2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='chicken3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                           text="<b>–•—Ä—É—Å—Ç—è—â–∞—è –∫—É—Ä–∏—Ü–∞ –≤ –ø–∞–Ω–∏—Ä–æ–≤–∫–µ (2 –ø–æ—Ä—Ü–∏–∏) (–ö–ë–ñ–£: 322/56/6/5)</b>",
                           parse_mode='html',
                           link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/7dny6Sww9a8?si=tYyIDI-o4QWO6z6W',
                                                                   prefer_large_media=True),
                           reply_markup=keyboard
                           )

    await state.clear()


@recipes.message(F.text == "–§–∞—Ä—à ü´î", StateFilter(FsmStates.choose_category))
async def send_desserts(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_ground_meat1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='ground_meat2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='ground_meat3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                           text="<b>–ó–∞–ø–µ–∫–∞–Ω–∫–∞ —Å –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ –∏ —Å—ã—Ä–æ–º (2 –ø–æ—Ä—Ü–∏–∏) (–ö–ë–ñ–£ –Ω–∞ –ø–æ—Ä—Ü–∏—é: 399/50/18/9,2)</b>",
                           parse_mode='html',
                           link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/kQSSgsBmQaE?si=FBiMRT-qEWAucTSa',
                                                                   prefer_large_media=True),
                           reply_markup=keyboard
                           )

    await state.clear()


@recipes.message(F.text == "–Ø–π—Ü–∞ üç≥", StateFilter(FsmStates.choose_category))
async def send_desserts(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_eggs1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='eggs2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='eggs3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                           text="<b>–®–∞–∫—à—É–∫–∞ (–ö–ë–ñ–£: 417/22/21/34)</b>",
                           parse_mode='html',
                           link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/3O3BmiUW8Bg?si=kpBAgyaFNMApMoEj',
                                                                   prefer_large_media=True),
                           reply_markup=keyboard
                           )

    await state.clear()


@recipes.message(F.text == "–û–≤—Å—è–Ω–∫–∞ ü•£", StateFilter(FsmStates.choose_category))
async def send_desserts(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_oatmeal1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='oatmeal2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='oatmeal3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                           text="<b>–û–í–°–Ø–ù–û–ë–õ–ò–ù —Å –∞—Ä–∞—Ö–∏—Å–æ–≤–æ–π –ø–∞—Å—Ç–æ–π –∏ –±–∞–Ω–∞–Ω–æ–º (–ö–ë–ñ–£: 481/20/20/56)</b>",
                           parse_mode='html',
                           link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/Pou1GLei12s?si=7HsqBPAfxYps3Ivu',
                                                                   prefer_large_media=True),
                           reply_markup=keyboard
                           )

    await state.clear()


@recipes.message(F.text == "–¢–≤–æ—Ä–æ–≥ üçö", StateFilter(FsmStates.choose_category))
async def send_cheese(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_cheese1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='cheese2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='cheese3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                         text="<b>–¢–≤–æ—Ä–æ–∂–Ω—ã–µ –±–µ–π–≥–ª—ã —Å –≤–µ—Ç—á–∏–Ω–æ–π –∏ —Å—ã—Ä–æ–º (–ö–ë–ñ–£: 398/38/15/28)</b>",
                         parse_mode='html',
                         link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/qMQ6y1GWddE?si=1UAca8JalCdyT12s',
                                                                   prefer_large_media=True),
                         reply_markup=keyboard
                         )

    await state.clear()


@recipes.message(F.text == "–†–æ–ª–ª—ã üåØ", StateFilter(FsmStates.choose_category))
async def send_cheese(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_roll1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='roll2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='roll3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                         text="<b> –¶–µ–∑–∞—Ä—å —Ä–æ–ª–ª (–ö–ë–ñ–£: 429/31/15/41)</b>",
                         parse_mode='html',
                         link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/0ib2rlox5fw?si=KM_3BLnnTIgPqeiC',
                                                                   prefer_large_media=True),
                         reply_markup=keyboard
                         )

    await state.clear()


@recipes.message(F.text == "–ê–≤–æ–∫–∞–¥–æ ü•ë", StateFilter(FsmStates.choose_category))
async def send_cheese(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_avocado1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='avocado2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='avocado3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                         text="<b>–°—ç–Ω–¥–≤–∏—á —Å –∞–≤–æ–∫–∞–¥–æ ( –ö–ë–ñ–£: 417/20/27/27)</b>",
                         parse_mode='html',
                         link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/Pg5HGQDrM4w?si=xvuYVbTG_KBO08Ug',
                                                                   prefer_large_media=True),
                         reply_markup=keyboard
                         )

    await state.clear()


@recipes.message(F.text == "–¢—É–Ω–µ—Ü üê†", StateFilter(FsmStates.choose_category))
async def send_cheese(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_tuna1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='tuna2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='tuna3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                         text="<b>–ü–û–ö–ï —Å —Ä–∏—Å–æ–º, —Ç—É–Ω—Ü–æ–º –∏ –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏ (–ö–ë–ñ–£: 449/20/14/56) </b>",
                         parse_mode='html',
                         link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/bF4_J4Y4oBY?si=mrQmEhjVxVF9hpak',
                                                                   prefer_large_media=True),
                         reply_markup=keyboard
                         )

    await state.clear()


@recipes.message(F.text == "–°–∞–ª–∞—Ç—ã –∏ –ø–æ–∫–µ ü•ó", StateFilter(FsmStates.choose_category))
async def send_cheese(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_salads1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='salads2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='salads3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                         text="<b>–°–∞–ª–∞—Ç —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏, —Ä—É–∫–∫–æ–ª–æ–π –∏ –∫–∏–Ω–æ–∞ (–ö–ë–ñ–£: 316/20/10/35) </b>",
                         parse_mode='html',
                         link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/TXynF6Ra008?si=6EgnV8l_oKmi3yN4',
                                                                   prefer_large_media=True),
                         reply_markup=keyboard
                         )

    await state.clear()


@recipes.message(F.text == "–ü–∞–Ω–∫–µ–π–∫–∏ –∏ –≤–∞—Ñ–ª–∏ ü•û", StateFilter(FsmStates.choose_category))
async def send_cheese(message: Message, bot: Bot, state: FSMContext):
    """

    :return:
    """

    await bot.send_message(chat_id=message.from_user.id,
                           text="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å üëá\n\n(—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ª–∏—Å—Ç–∞–π—Ç–µ –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ‚¨ÖÔ∏è‚û°Ô∏è)",
                           parse_mode='html',
                           reply_markup=ReplyKeyboardRemove())

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ—Ü–µ–ø—Ç', callback_data='recipe_pancakes1')],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='pancakes2'),
            InlineKeyboardButton(text='‚û°Ô∏è', callback_data='pancakes3')
        ],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='button_recipe_analyse_pressed')]
    ])

    await bot.send_message(chat_id=message.from_user.id,
                         text="<b>–¢–≤–æ—Ä–æ–∂–Ω—ã–µ –æ–ª–∞–¥—å–∏ —Å –ª—É–∫–æ–º –∏ —Å—ã—Ä–æ–º (–ö–ë–ñ–£: 352/26/15/25) </b>",
                         parse_mode='html',
                         link_preview_options=LinkPreviewOptions(url='https://youtube.com/shorts/fPugTMZVZ0k?si=KMR24MA6sE5xTl_u',
                                                                   prefer_large_media=True),
                         reply_markup=keyboard
                         )

    await state.clear()


@recipes.message(F.text == "–ù–∞–∑–∞–¥", StateFilter(FsmStates.choose_category))
async def home(message: Message, bot: Bot, state: FSMContext):
    await bot.send_message(chat_id=message.from_user.id, text='–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...', reply_markup=ReplyKeyboardRemove())
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"–ò —Å–Ω–æ–≤–∞, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π ‚úã\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–∫–∏–Ω—É—Ç—å –ø–∞—Ä—É –ª–∏—à–Ω–∏—Ö –∫–∏–ª–æ–≥—Ä–∞–º–º –∏ –ø—Ä–∏–π—Ç–∏ –∫ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º —Å –µ–¥–æ–π –±–µ–∑ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ª—é–±–∏–º—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –Ω–µ —Ç—Ä–∞—Ç—è –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≥–æ—Ç–æ–≤–∫—É. –Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ–π —Ä–∞—Ü–∏–æ–Ω, –¥–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –Ω–∞ —É—Ä–æ–≤–Ω–µ —Ç–æ–ø–æ–≤–æ–≥–æ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∞ –∏ –ø–æ–º–æ–≥—É —Å –±—ã—Å—Ç—Ä—ã–º–∏, –≤–∫—É—Å–Ω—ã–º–∏ –∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏.",
                           parse_mode="html",
                           reply_markup=keyboard)

    await state.clear()
